{"version":3,"sources":["webpack:///./src/pages/getting-started/index.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","PageDescription","InlineNotification","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","kind","isMDXComponent"],"mappings":"weAMO,IAAMA,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAkBL,EAAc,mBAChCM,EAAqBN,EAAc,sBACnCO,EAAc,CAClBR,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,E,oIACF,mBACD,OAAO,YAACM,EAAD,KAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAG5E,YAACP,EAAD,CAAiBO,QAAQ,mBACvB,mOAEF,8CACA,qFACA,sBACE,kBAAIC,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,oDADQ,eAGpB,kBAAIA,WAAW,MAAf,qCAKF,YAACP,EAAD,CAAoBM,QAAQ,sBAC1B,0HAAyG,0BAAYC,WAAW,KAAvB,iBAAzG,gCAEF,mDACA,4BAAW,0BAAYA,WAAW,KAAvB,oBAAX,2KACA,mEAAkD,0BAAYA,WAAW,KAAvB,oBAAlD,mBACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,0aAqBL,0KAAyJ,0BAAYA,WAAW,KAAvB,YAAzJ,cACA,2DAA0C,0BAAYA,WAAW,KAAvB,oBAA1C,QAA+G,mBAAGA,WAAW,KAAQ,CACjI,KAAQ,gCADmG,iBAA/G,KAGA,6CACA,+DAA8C,0BAAYA,WAAW,KAAvB,oBAA9C,yHAAoO,0BAAYA,WAAW,KAAvB,oBAApO,kHAAmZ,0BAAYA,WAAW,KAAvB,oBAAnZ,0HAA0kB,0BAAYA,WAAW,KAAvB,oBAA1kB,yEACA,YAACP,EAAD,CAAoBQ,KAAK,UAAUF,QAAQ,sBACzC,qBAAG,sBAAQC,WAAW,KAAnB,YAAH,sLAMNH,EAAWK,gBAAiB","file":"component---src-pages-getting-started-index-mdx-67c610cf60782f2f3d1a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/travis/build/IBM/datapower-operator-doc/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst InlineNotification = makeShortcode(\"InlineNotification\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`IBM DataPower Operator is capable of packaging, deploying, and managing your IBM DataPower Gateway so that you can focus on developing and deploying your configuration and code, and less on operations.`}</p>\n    </PageDescription>\n    <h2>{`Installation Methods`}</h2>\n    <p>{`There are two methods to install the IBM DataPower Operator:`}</p>\n    <ol>\n      <li parentName=\"ol\"><a parentName=\"li\" {...{\n          \"href\": \"https://github.com/IBM/datapower-operator-chart\"\n        }}>{`Helm chart`}</a></li>\n      <li parentName=\"ol\">{`Operator Lifecycle Manager (OLM)`}</li>\n    </ol>\n    {\n      /* This should be updated / removed when the Operator joins OperatorHub */\n    }\n    <InlineNotification mdxType=\"InlineNotification\">\n      <p>{`Currently installation via OLM requires manually loading the IBM DataPower Operator Catalog via a `}<inlineCode parentName=\"p\">{`CatalogSource`}</inlineCode>{` in an OLM-enabled cluster.`}</p>\n    </InlineNotification>\n    <h2>{`Intro to DataPowerService`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` is a Custom Resource Definition exposed by the IBM DataPower Operator. It is the primary API you will leverage to create and manage your deployments of IBM DataPower.`}</p>\n    <p>{`Below is a brief example of what a minimal `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` may look like:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-yaml\"\n      }}>{`apiVersion: datapower.ibm.com/v1beta1\nkind: DataPowerService\nmetadata:\n  name: example\n  labels:\n    app.kubernetes.io/instance: example\n    app.kubernetes.io/name: example\n    app.kubernetes.io/managed-by: datapower-operator\nspec:\n  license:\n    accept: true\n    use: production\n  version: 10.0.0\n  replicas: 3\n  users:\n  - name: admin\n    passwordSecret: admin-credentials\n    accessLevel: privileged\n`}</code></pre>\n    <p>{`The above Custom Resource would be translated to a StatefulSet with 3 replicas of production licensed IBM DataPower Pods, each running the latest `}<inlineCode parentName=\"p\">{`10.0.0.x`}</inlineCode>{` fix-pack.`}</p>\n    <p>{`For more details, see the complete `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` API `}<a parentName=\"p\" {...{\n        \"href\": \"/apis/datapowerservice/spec\"\n      }}>{`documentation`}</a>{`.`}</p>\n    <h2>{`Managed StatefulSet`}</h2>\n    <p>{`The IBM DataPower Operator exposes the `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` Custom Resource Definition as a mechanism to deploy and manage StatefulSets of IBM DataPower Pods. When you create a `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` Custom Resource, the Operator will reconcile this resource by creating and managing the StatefulSet. For each `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` Custom Resource created, another StatefulSet will be created. They are tightly coupled: when you make an update to an `}<inlineCode parentName=\"p\">{`DataPowerService`}</inlineCode>{` instance, its StatefulSet will be automatically updated accordingly.`}</p>\n    <InlineNotification kind=\"warning\" mdxType=\"InlineNotification\">\n      <p><strong parentName=\"p\">{`Warning:`}</strong>{` You should not manually edit the StatefulSet that is created by the Operator. Any changes you make to the StatefulSet will be overwritten by the Operator during reconcilation.`}</p>\n    </InlineNotification>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}